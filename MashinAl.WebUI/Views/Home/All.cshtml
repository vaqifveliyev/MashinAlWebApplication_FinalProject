@using MashinAl.WebUI.Views.ViewComponents
@using MashinAl.Business.Modules.CarModule.Queries.CarGetAllQuery
@model IEnumerable<CarGetAllDto>

@{
    ViewBag.Title = "Bütün Elanlar | Mashin.AL";
}


    <div class="container">
        <section class="section search-filter">
            <div class="section-header">
                <div class="type-buttons">
                    <button class="btn-type active">Hamısı</button>
                    <button class="btn-type">Yeni</button>
                    <button class="btn-type">Sürülmüş</button>
                </div>
            </div>
            <div class="section-body"></div>
            <div class="section-bottom">
            <form method="post" action="@Url.Action("Search", "Home")">
                <div class="first-row">
                    @await Component.InvokeAsync("FilterMarka")
                    @await Component.InvokeAsync("FilterModel")

                </div>
                <div class="second-row">
                    <input name="MinPrice" data-entity-type="minprice" type="text"
                           placeholder="Qiymət, min. (AZN)"
                           class="select-container" />
                    <input name="MaxPrice" data-entity-type="maxprice" type="text"
                           placeholder="Qiymət, maks. (AZN)"
                           class="select-container" />
                    <label class="custom-checkbox-label">
                        <span class="custom-checkbox" id="kreditCheckbox">Kredit</span>
                    </label>

                    @*                     <label class="custom-checkbox-label">
                    <span class="custom-checkbox" id="icareCheckbox">İcarə</span>
                    </label> *@

                    <label class="custom-checkbox-label">
                        <span class="custom-checkbox" id="barterCheckbox">Barter</span>
                    </label>

                    <!-- Hidden checkboxes -->
                    <input type="checkbox" name="IsCredit" />
                    <input type="checkbox" name="IsBarter" />
                    <!-- Hidden checkboxes -->

                </div>
                <div class="hidden-row">
                    @await Component.InvokeAsync("FilterCity")
                    @await Component.InvokeAsync("FilterTransmission")
                    @await Component.InvokeAsync("FilterFuelType")
                    @await Component.InvokeAsync("FilterColor")
                </div>
                <div class="form-buttons">
                    <button class="formBtn"
                            type="reset"
                            onclick="resetCustomCheckboxes()">
                        Sıfırla <i class="fa-solid fa-xmark"></i>
                    </button>
                    <button class="btn-more-filter formBtn">
                        Daha çox filtr <i class="fa-solid fa-sliders"></i>
                    </button>
                    <button class="btn btn-green" type="submit">
                        Axtar <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                </div>
            </form>
            </div>
        </section>
    <section class="section featured-ads">
        <div class="section-header announcements-header">
            <h1>Elanlar</h1>
            <select name="sort-by" id="sort-by" class="select-container">
                <option value="sort-by" selected disabled>Sıralama</option>
                <option value="sort-by-date">Tarixə görə</option>
                <option value="sort-lowprice-first">Əvvəlcə ucuz</option>
                <option value="sort-highprice-first">Əvvəlcə bahalı</option>
                <option value="sort-year">Buraxılış ili</option>
            </select>
        </div>
        <div class="section-body">
            <div class="loading-container">
                <div class="loading-circle"></div>
                Məlumatlar yüklənir...
            </div>
            <div class="section-card-row" id="carList">
                <!-- Loader inside this div -->
               
                <partial name="_CarBody" model="@Model" />
            </div>
        </div>

    </section>
    </div>


@section breadcrumbs {
    <section class="section breadcrumbs-section">
        <div class="container">
            <div class="breadcrumbs">
                <a asp-controller="home" asp-action="index">Əsas</a>
                <a asp-controller="home" asp-action="all">Bütün Elanlar</a>
            </div>
        </div>
        </section>
}


@section addjs {
        <script>

        $(document).ready(function () {
            $('#marka').change(function () {
                var selectedMarkaId = $(this).val();
                var modelSelect = $('#model');

                if (selectedMarkaId) {
                    modelSelect.prop('disabled', false);

                    $.ajax({
                        url: '@Url.Action("GetModelsByMarka", "Home")',
                        type: 'GET',
                        data: { markaId: selectedMarkaId },
                        success: function (data) {
                            modelSelect.empty().append('<option value="">Model seçin...</option>');

                            if (data) {
                                $.each(data, function (index, value) {
                                    modelSelect.append('<option value="' + value.id + '">' + value.name + '</option>');
                                });
                            }
                        },
                        error: function (error) {
                            console.error('Error fetching models:', error);
                        }
                    });
                } else {
                    modelSelect.prop('disabled', true).html('<option value="">Model seçin...</option>');
                }
            });
        });


        $(document).ready(function () {
            $('#sort-by').change(function () {
                // Show loader within the .section-card-row
                showPreloader();

                var sortByValue = $(this).val();

                $.ajax({
                    url: '@Url.Action("Sort", "Home")',
                    type: 'POST',
                    data: { sortBy: sortByValue },
                    success: function (result) {
                        // Delay hiding the loader and updating content for 2 seconds
                        setTimeout(function () {
                            // Update the content inside the .section-card-row element
                            $('.section-card-row').html(result);

                            // Hide loader after updating content
                            hidePreloader();
                        }, 1000);
                    },
                    error: function (error) {
                        console.log(error);

                        // Hide loader in case of an error
                        hidePreloader();
                    }
                });
            });

            // Function to show the loader within .section-card-row
            function showPreloader() {
                $(".loading-container").show();
                $(".section-card-row").hide(); // Hide cars
            }

            // Function to hide the loader within .section-card-row
            function hidePreloader() {
                $(".loading-container").hide();
                $(".section-card-row").show(); // Show cars after 2 seconds
            }

            // Initial hide of loader and show cars
            $(".loading-container").hide();
            $(".section-card-row").show();
        });







            /* SEARCH 3 BUTTONS START */
            document.addEventListener("DOMContentLoaded", function () {
                var buttons = document.querySelectorAll(".btn-type");

                buttons.forEach(function (button) {
                    button.addEventListener("click", function () {
                        buttons.forEach(function (btn) {
                            btn.classList.remove("active");
                        });
                        button.classList.add("active");
                    });
                });
            });
            /* SEARCH 3 BUTTONS END */

            /* CUSTOM CHECKBOXES */

            function toggleCheckbox(checkboxId) {
                var hiddenCheckbox = document.querySelector(
                    'input[name="' + checkboxId + '"]'
                );
                hiddenCheckbox.checked = !hiddenCheckbox.checked;
            }

            document
                .getElementById("kreditCheckbox")
                .addEventListener("click", function () {
                    this.classList.toggle("checked");
                    toggleCheckbox("kredit");
                });

           
            document
                .getElementById("barterCheckbox")
                .addEventListener("click", function () {
                    this.classList.toggle("checked");
                    toggleCheckbox("barter");
                });

            function resetCustomCheckboxes() {
                document
                    .querySelectorAll(".custom-checkbox")
                    .forEach(function (checkbox) {
                        checkbox.classList.remove("checked");
                    });

                let modelSelect = document.getElementById('model');
                modelSelect.disabled = true;
            }

            function submitForm() {
                document.getElementById("myForm").submit();
            }

            /* MORE FILTER BUTTON */

            let moreFilterButton = document.querySelector(".btn-more-filter");
            let hiddenRow = document.querySelector(".hidden-row");

            moreFilterButton.addEventListener("click", function (event) {
                event.preventDefault();
                hiddenRow.classList.toggle("open");

                moreFilterButton.innerHTML = hiddenRow.classList.contains("open")
                    ? 'Qısalt <i class="fa-solid fa-angle-up"></i>'
                    : 'Daha çox filtr <i class="fa-solid fa-sliders"></i>';
            });


            function checkMarkaSelection() {
                var markaSelect = document.getElementById('marka');
                var modelSelect = document.getElementById('model');

                if (markaSelect.value !== 'Marka seçin...') {
                    modelSelect.disabled = false;
                } else {
                    modelSelect.disabled = true;
                    modelSelect.value = 'Model seçin...';
                }
            }

            /* CHECK MARKA VALUE */

            function checkMarkaSelection() {
                var markaSelect = document.getElementById('marka');
                var modelSelect = document.getElementById('model');

                if (markaSelect.value === 'Marka seçin...') {
                    modelSelect.disabled = true;
                } else {
                    modelSelect.disabled = false;
                }
            }


            $('span.icon-favorite').unbind().click(function (e) {
                e.preventDefault();

                const carId = $(e.currentTarget).data('id');

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("AddToFavorite", "Car")",
                    data: { CarId: carId, Quantity: 1 },
                    dataType: "json",
                    success: function (response) {
                        toastr.success('Elan seçilmişlərə əlavə olundu!', 'Uğurlu nəticə!');


                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("InvokeAsync", "FavoriteInfo")",
                            success: function (html) {
                                $('#favoritesContainer').html(html);
                            },
                            error: function (error) {
                                console.error('Failed to reload FavoriteInfoViewComponent:', error);
                            }
                        });
                    },
                    error: function (error) {
                        console.error('Failed to add to favorites:', error);
                    }
                });
            });
        </script>


}


@section addcss {
    <style>
    .loading-container {
    display: none;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    column-gap: 10px;
}

.loading-circle {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 2px solid #f81734; 
    border-radius: 50%;
    border-top: 2px solid transparent; 
    animation: spin 1s linear infinite; 
}

@@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
    </style>
}